<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGFQoPMBUODmkVDhCcFhESwhoU
        FdUdFxjbHhcZ2xsUFtQYEhK/FQ8QmBQPD2URCwssAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFFA0RShUQEJwbFRbhMisu/E9H
        S/5oYGX/f3Z8/5WMkv+imZ//mpKY/352fv9fV1/+Lykt+xwXGd0WDxGVEg8PRAAAAAMAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEQsRLBUPD5EeGBrrS0VI/nlx
        d/+flZ3/rqWt/7Wrs/+/tr7/0cjP/9/W3f/d09z/xrzK/56Wo/9ZVFv/REBF/zItMf4fGRvmFA8QiBUO
        DiQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABMNEE4WDxHAPjo7/np4
        ef+rqqv/s66z/7ewtv+9t73/xsPG/9LR0v/f3d//5uPm/9nV2//BvMf/g36H/1FNU/9RTVP/UExS/0M/
        RP8sJyr+FxASthIODkUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUDg5ZFxET1lRR
        Uv+ZmJn/tLS1/7q6u//CwsP/y8rL/9PT0//b29z/4+Pj/+rq6v/q6uv/19fb/76+xv9zc3f/UVBT/1FP
        U/9RTlP/UU1T/01JT/81MDP/GhQVzBMMEE8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAExAQTxcR
        E9ZcWVr/pqan/7W1tv++vr//ysrL/9bW1//f3+D/5eXl/+np6f/s7O3/7+/v/+zs7f/Y2Nz/v7/H/3Z2
        e/9RUVP/UVFT/1FQU/9RT1P/UU1T/1BMUv83Mjb/GhQVyxMPD0MAAAAAAAAAAAAAAAAAAAAAAAAAABYL
        ES0WDxHAVVFS/6Wlpv+vr7D/r6+w/8TExP/V1dX/4+Pj/+rq6v/u7u7/7+/v//Dw8P/w8PD/7u7u/93d
        4f/Fxc3/jIyS/1FRU/9RUVP/UVFT/1FQU/9RT1P/UU1T/1BMUv80LzP/FhAStQ8PDyEAAAAAAAAAAAAA
        AAAAAAAFFA8Rkj86O/6Yl5j/m5uc/3d3ef9nZ2n/o6Ok/9HR0f/j4+P/7e3t//Dw8P/w8PD/8fHx//Hx
        8f/v7/D/5ubo/9HR1/+xsbj/a2tu/1FRU/9RUVP/UVFT/1FRU/9RT1P/UU1T/1FNU/81LzP+FA8RhgAA
        AAIAAAAAAAAAABMNEE0fGRrte3h5/6Wlpv9sbG3/UVFT/15eYP+goKH/yMjJ/97e3v/r6+v/8PDw//Hx
        8f/w8PD/8PDw//Dw8P/u7u7/4+Pl/9LS1/+kpKr/bGxv/1FRU/9RUVP/UVFT/1FRU/9eXGD/joeS/4V8
        hv8eGBnjFBAQPwAAAAAAAAAHFBAQn01JSv6qqar/np6g/2ZmZ/9sbG3/j4+Q/7Kys//CwsP/2tra/+np
        6v/v7+//8PDw/+7u7//s7O3/7Ozs/+7u7v/t7e7/5ubo/9vb3v++vsP/lpaa/319gP95eXz/jIyQ/66u
        s//QydP/zsXO/1VOUf4VDxGQAAAAAxQPDzMdFhfjfHp7/7Cwsf+vr7D/n5+g/5CQkf+Xl5n/s7O0/8PD
        w//a2tv/6urq/+/v7//q6uv/19fY/8rKzf/Q0NP/3t7h/+fn6f/s7O3/7Ozt/+fn6f/i4uT/3Nzf/9ra
        3f/e3uH/5OTm/+jk6P/p4Of/lo6T/xsVFtgTDQ0nFQ4QbTUwMfyhoaL/sLCx/6OjpP90dHb/VVVX/2lp
        a/+vr7H/ysrL/9/f3//r6+v/w8PD/42Njv9paWv/YWFk/25ucf+Skpb/xsbK/9/f4v/r6+z/7+/v/+/v
        7//u7u//7u7v/+7u7//v7+//8O/w/+zm6//Mw8r/NjAy+RUNEF0UDw+gUk5Q/q6tr/+vr7D/hISG/1FR
        U/9ZWVv/jIyO/8TExf/W1tf/5ubm/7Kys/9mZmj/UVFT/1FRU/9RUVP/UVFT/1FRU/96en7/vb3D/93d
        4P/s7Oz/8PDw//Dw8P/w8PD/8PDw//Hx8f/x8PH/7urt/+Tb4v9bVFf+FRAQjxcQEsZsaWr/sLCx/7Gx
        sv+Xl5j/h4eI/6Kio//Jycr/1tbX/+Pj4//Q0NH/b29w/1FRU/9RUVP/UVFT/1FRU/9RUVP/UVFT/1FR
        U/+Hh4z/y8vR/+Pj5f/v7+//8PDw//Hx8f/x8fH/8fHx//Hx8f/v7e//6uLo/352ev8WEBC3GxUW2H58
        ff+wsLH/srKz/7u7vP/Jycn/1tbW/9/f3//m5ub/6+vr/6qqq/9SUlT/UVFT/1FRU/9RUVP/UVFT/1FR
        U/9RUVP/UVFT/2RkZ/+2tr3/2dnd/+zs7f/w8PD/8fHx//Hx8f/x8fH/8fHx//Dv8P/s5Or/lo6T/xgS
        E84eGBnchoWG/7Cwsf+zs7T/wMDB/9PT1P/j4+P/6urq/+3t7f/t7e3/lJSV/1FRU/9RUVP/UVFT/1FR
        U/9RUVP/UVFT/1FRU/9RUVP/WFha/6mpsP/T09j/6urr//Dw8P/x8fH/8fHx//Hx8f/x8fH/8PDw/+zl
        6v+jmqD/GxUW1h4YGdyGhYb/sLCx/7KytP++vr//1NTU/+bm5v/u7u7/8PDw/+/v7/+Xl5j/UVFT/1FR
        U/9RUVP/UVFT/1FRU/9RUVP/UVFT/1FRU/9ZWVv/qqqx/9PT2P/q6uv/8PDw//Hx8f/x8fH/8fHx//Hx
        8f/w7/D/6+Tq/6Kan/8bFRbWGxUW1359fv+wsLH/sbGy/7q6u//Ozs//4uLi/+3t7f/w8PD/8PDw/7S0
        tf9TU1X/UVFT/1FRU/9RUVP/UVFT/1FRU/9RUVP/UVFT/2lpbf+4uMD/2Njc/+zs7f/w8PD/8fHx//Hx
        8f/x8fH/8fHx/+/t7//r4+n/lo6T/xgSE80XEBLGbWpr/7Cwsv+wsLH/tra3/8bGx//c3Nz/6urq/+/v
        7//x8fH/39/f/35+f/9RUVP/UVFT/1FRU/9RUVP/UVFT/1FRU/9TU1X/j4+V/8rK0f/h4eP/7e3u//Dw
        8P/w8PD/8fHx//Hx8f/x8fH/7uvt/+rh6P99dXr/FhAQthQQEJ9UUFH+r6+x/7Cwsf+ysrP/vr6//9PT
        1P/l5eX/7e3t/+3t7f/X19f/wsLC/3p6e/9RUVP/UVFT/1FRU/9RUVP/V1dZ/4mJjf/Hx83/2dnd/+Li
        5P/k5Ob/5+fp/+3t7f/w8PD/8fHx//Dw8P/t5+v/5Nvi/1pTVv4VDhCOFQ4QbDUwMfyjo6T/sLCx/7Gx
        sv+4uLn/ycnK/93d3f/p6er/w8PD/2RkZf+dnZ7/1tbW/6enqP+Dg4X/d3d5/4WFiP+oqKz/1NTZ/9zc
        4P/W1tv/zMzS/8LCyP/Jyc//4ODi/+3t7f/w8PD/7+3v/+vj6f/Lwsn/NS8x+RMNEFwUCg8yHBYX4n99
        fv+xsbL/sLCx/7OztP++vr//0dHS/+Li4v/e3t7/mZma/5iYmf/n5+f/8PDw/+np6f/g4OH/39/h/+Tk
        5v/l5ef/19fb/6+vtf+Cgof/aGhr/3Jydv+ysrb/5+fo/+/v7//t6Oz/6uHo/5WNkv8aFBXXFA0NJQAA
        AAYVEBCdT0tM/q2trv+wsLH/sLCx/7a2t//ExMT/1tbW/+Tk5f/q6ur/6urq//Dw8P/w8PD/8PDw/+/v
        7//u7u//7e3u/+Hh4/+vr7T/a2tu/1FRU/9RUVP/UVFT/5OTl//j4+X/7ens/+vi6f/c09n/VE1Q/hUQ
        EI4AAAADAAAAABQNEUsfGhvrfnx9/7Kys/+wsLH/sbGy/7i4uf/Hx8j/2NjZ/+Tk5f/r6+v/7u7u/+/v
        7//w8PD/8PDw//Dw8P/s7O3/1NTY/39/g/9RUVP/UVFT/1FRU/9UVFf/o6Oo/+Dc4v/p4ef/6uHo/5WN
        kv8dFhfhFBAQPQAAAAAAAAAAAAAABRUPEZBAPD3+nJuc/7Gxsv+wsLH/srKz/7q6u//Hx8j/1tbX/+Dg
        4f/n5+f/6+vr/+3t7f/v7+//8PDw/+vr7P/NzdH/cHB0/1FRU/9RUVP/VVVX/4GBhv+8uML/08rV/+Xb
        4/++tbz/Qjs+/hUPEYMAAAACAAAAAAAAAAAAAAAAEQsRKxUQEb5XU1T/qaip/7Cwsf+wsLH/srKz/7m4
        uv/DwcP/zcrN/9XT1f/e3t7/5eXm/+vr6//u7u7/7e3t/97e4f+kpKj/enp9/3x8gP+LipD/fHuA/4J+
        hv/Eu8f/ysDI/2FZXf8VDxGyEBAQHwAAAAAAAAAAAAAAAAAAAAAAAAAAFA0QTBYSEtNeWlv/p6eo/7Cw
        sf+vq7D/saqw/7Sss/+4r7f/v7a9/8nEyP/V1db/4eHi/+rq6v/u7u7/6+vs/+Lh5P/W1Nn/0MrT/6ag
        qf9gX2L/jYiQ/7qwu/9nYGT/FhARyBMLD0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFA4OVhYQ
        EtNVUVL/mJSX/6+mrv+roar/npae/5yUm/+on6f/tq21/8G7wf/RzND/4Nvf/+nk6P/s5+v/6+Tp/+ng
        5//l2+P/183X/8C4wv+roqv/XFVZ/xYQEckUDQ1MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAFA0RSxUQEbw9Nzn+cWlv/3Rwdf9aWVv/V1ZZ/2dkaP+Nh43/tauz/8O5wf/VzNP/49nh/+nf
        5v/r4ej/6+Ho/+rh6P/a0dj/k4qQ/0I7Pv4VDxGzEw8PQQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAEwwMKBUQEI0eGBnpLyst/kA+QP9MTE7/UFBS/15dYP+akpn/vLK6/9DH
        zv/h19//6N7l/+Xc4//Oxcv/l4+U/1dPU/4dFxjjFQ8RhQ8PDyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBUODkcVDxCYGhQV3iQfIPsvLC3+OTY4/2Nd
        Yf+If4X/lo2T/5SMkf+AeHz/Xlda/jgwM/oaFRbaFQ8PkRMPD0AAAAACAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAURCwssFA8PZRQP
        EJcWEBG9GBMU0hwVF9kcFhfYGRMU0RUQEbsUDw+TFQ0PYBMMDCgAAAADAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/4AB//4AAH/8AAA/+AAAH/AAAA/gAAAHwAAAA4AAAAGAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAABgAAAAcAA
        AAPgAAAH8AAAD/gAAB/8AAA//gAAf/+AAf8=
</value>
  </data>
</root>